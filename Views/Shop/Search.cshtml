@model List<Village_Manager.Models.Product>
@{
    ViewData["Title"] = "Tìm kiếm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="FamViệt">
    <meta name="keywords" content="FamViệt">
    <meta name="author" content="FamViệt">
    <link rel="icon" href="~/images/favicon/1.png" type="image/x-icon">
    <title>Tìm kiếm sản phẩm</title>

    <!-- Google font -->
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Russo+One&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Exo+2:wght@400;500;600;700;800;900&display=swap"
          rel="stylesheet">
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap">

    <!-- bootstrap css -->
    <link id="rtl-link" rel="stylesheet" type="text/css" href="~/css/vendors/bootstrap.css">

    <!-- wow css -->
    <link rel="stylesheet" href="~/css/animate.min.css">

    <!-- Iconly css -->
    <link rel="stylesheet" type="text/css" href="~/css/bulk-style.css">

    <!-- Template css -->
    <link id="color-link" rel="stylesheet" type="text/css" href="~/css/style.css">

    <style>
        #price-range {
            display: none !important;
        }
    </style>
</head>
<body>
    <!-- Breadcrumb Section Start -->
    <section class="breadcrumb-section pt-0">
        <div class="container-fluid-lg">
            <div class="row">
                <div class="col-12">
                    <div class="breadcrumb-contain">
                        <h2>Danh sách sản phẩm</h2>
                        <nav>
                            <ol class="breadcrumb mb-0">
                                <li class="breadcrumb-item">
                                    <a href="/">
                                        <i class="fa-solid fa-house"></i>
                                    </a>
                                </li>
                                <li class="breadcrumb-item active">Sản phẩm</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->
    <!-- Shop Section Start -->
    <section class="section-b-space shop-section">
        <div class="container-fluid-lg">
            <div class="row">
                <div class="col-custom-3">
                    <div class="left-box wow fadeInUp">
                        <div class="shop-left-sidebar">
                            <div class="back-button">
                                <h3><i class="fa-solid fa-arrow-left"></i> Back</h3>
                            </div>
                            <div class="text-center mb-4">
                                <h2 class="fw-bold">Bộ lọc</h2>
                            </div>
                            <!-- FORM SEARCH -->
                            <div class="filter-category">
                                <!-- Tiêu đề -->
                                <div class="filter-title d-flex justify-content-between align-items-center">
                                    <h2 class="mb-0">Tìm kiếm</h2>
                                </div>
                                <div class="d-flex flex-column gap-2">
                                    <form id="searchForm" class="mb-1">
                                        <div class="position-relative">
                                            <input type="text" id="searchBox" class="form-control pe-5" placeholder="Nhập tên sản phẩm" />
                                            <button type="submit"
                                                    class="btn position-absolute end-0 top-50 translate-middle-y me-3 p-0 border-0 bg-transparent">
                                                <i class="fa fa-search text-muted"></i>
                                            </button>
                                        </div>
                                    </form>
                                    <button id="clearAllBtn" type="button"
                                            class="text-success fw-semibold border-0 bg-transparent p-0 align-self-end mt-2">
                                        Xóa lịch sử tìm kiếm
                                    </button>
                                    <ul id="searchHistoryList" class="d-flex flex-wrap"></ul>
                                </div>
                            </div>
                            <div class="accordion custom-accordion" id="accordionExample">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#categoryCollapse">
                                            <span>Danh mục</span>
                                        </button>
                                    </h2>
                                    <div id="categoryCollapse" class="accordion-collapse collapse show">
                                        <div class="accordion-body">
                                            <!--Category -->
                                            @foreach (var cat in ViewBag.Categories as List<Village_Manager.Models.ProductCategory>)
                                            {
                                                var isChecked = Context.Request.Query["categoryIds"].Contains(cat.Id.ToString());
                                                <div class="form-check mb-2">
                                                    <input class="form-check-input" type="checkbox" name="categoryIds" value="@cat.Id" @(isChecked ? "checked" : "") />
                                                    <label class="form-check-label">@cat.Name</label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <!-- Price range-->
                                    <div class="accordion-item mt-2">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePrice">
                                                <span>Khoảng giá</span>
                                            </button>
                                        </h2>
                                        <div id="collapsePrice" class="accordion-collapse collapse show">
                                            <div class="accordion-body">
                                                <div class="range-slider" style="max-width: 100%;">
                                                    <input type="hidden" id="price-range" name="price" value="" />
                                                    <input type="hidden" id="minPrice" name="minPrice" />
                                                    <input type="hidden" id="maxPrice" name="maxPrice" />
                                                    <div class="d-flex justify-content-between gap-2 mt-2">
                                                        <input type="text" class="form-control" id="manualMin" placeholder="Tối thiểu" />
                                                        <input type="text" class="form-control" id="manualMax" placeholder="Tối đa" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Apply Filter-->
                                    <div class="mt-3">
                                        <button id="applyFilterBtn" class="btn w-100 fw-bold"
                                                style="background-color: #0DA487; color: white; border-radius: 6px;" type="button">
                                            Áp dụng
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-custom-">
                    <div class="show-button">
                        <div class="filter-button-group mt-0">
                            <div class="filter-button d-inline-block d-lg-none">
                                <a style="cursor: pointer;">
                                    <i class="fa-solid fa-filter"></i> Danh sách lọc
                                </a>
                            </div>
                        </div>
                        <div class="top-filter-menu">
                            <div class="category-dropdown">
                                <h5 class="text-content">Xếp theo :</h5>
                                <div class="dropdown">
                                    <button class="btn dropdown-toggle" type="button" id="sortDropdownButton"
                                            data-bs-toggle="dropdown" aria-expanded="false" data-sort="">
                                        <span id="currentSortLabel">Mặc định</span>
                                        <i class="fa-solid fa-angle-down"></i>
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="sortDropdownButton">
                                        <li><a href="javascript:void(0)" class="dropdown-item" data-sort="">Mặc định</a></li>
                                        <li><a href="javascript:void(0)" class="dropdown-item" data-sort="price_asc">Giá thấp - cao</a></li>
                                        <li><a href="javascript:void(0)" class="dropdown-item" data-sort="price_desc">Giá cao - thấp</a></li>
                                        <li><a href="javascript:void(0)" class="dropdown-item" data-sort="name_asc">A - Z</a></li>
                                        <li><a href="javascript:void(0)" class="dropdown-item" data-sort="name_desc">Z - A</a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="grid-option d-none d-md-block">
                                <ul>
                                    <li class="grid-btn d-xxl-inline-block d-none active">
                                        <a href="javascript:void(0)">
                                            <img src="~/svg/grid-4.svg"
                                                 class="blur-up lazyload d-lg-inline-block d-none" alt="">
                                            <img src="~/svg/grid.svg"
                                                 class="blur-up lazyload img-fluid d-lg-none d-inline-block" alt="">
                                        </a>
                                    </li>
                                    <li class="list-btn">
                                        <a href="javascript:void(0)">
                                            <img src="~/svg/list.svg" class="blur-up lazyload" alt="">
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div id="product-list" class="row g-sm-4 g-3 row-cols-xxl-4 row-cols-xl-3 row-cols-lg-2 row-cols-md-3 row-cols-2 product-list-section">
                        @foreach (var item in Model)
                        {
                            <div class="col">
                                <div class="product-box-3 h-100 wow fadeInUp">
                                    <div class="product-header">
                                        <div class="product-image">
                                            <a href="/shop/detail/@item.Id">
                                                <img src="@(item.ProductImages.FirstOrDefault()?.ImageUrl ?? "/images/product/default-product.png")"
                                                     class="img-fluid blur-up lazyload" alt="@item.Name" />
                                            </a>
                                        </div>
                                    </div>
                                    <div class="product-footer">
                                        <div class="product-detail">
                                            <span class="span-name">@item.Category?.Name</span>
                                            <a href="/shop/detail/@item.Id" class="name theme-color">@item.Name</a>
                                            <p class="text-content mt-1 mb-2 product-content">Tình trạng: @item.ProductType</p>
                                            <h5 class="price text-dark">₫@item.Price.ToString("N0")</h5>
                                            <!-- Nút Add to Cart -->
                                            <div class="cart_qty qty-box open mt-2">
                                                <form method="post" asp-controller="Shop" asp-action="AddToCart" class="d-flex align-items-center">
                                                    <input type="hidden" name="productId" value="@item.Id" />
                                                    <div class="input-group bg-white w-auto">
                                                        <button type="button" onclick="adjustQty(this, -1)"><i class="fa fa-minus"></i></button>
                                                        <input type="number" name="quantity" class="form-control input-number qty-input text-center" value="1" min="1" />
                                                        <button type="button" onclick="adjustQty(this, 1)"><i class="fa fa-plus"></i></button>
                                                    </div>
                                                    <script>
                                                        function adjustQty(btn, delta) {
                                                            const input = btn.parentElement.querySelector('.qty-input');
                                                            let val = parseInt(input.value) || 1;
                                                            val += delta;
                                                            if (val < 1) val = 1;
                                                            input.value = val;
                                                        }
                                                    </script>
                                                    <button type="submit" class="btn btn-sm ms-2" style="background-color: #4caf50; color: white;">
                                                        <i class="fa fa-shopping-cart"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <nav class="custom-pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item disabled">
                                <a class="page-link" href="javascript:void(0)" tabindex="-1">
                                    <i class="fa-solid fa-angles-left"></i>
                                </a>
                            </li>
                            <li class="page-item active">
                                <a class="page-link" href="javascript:void(0)">1</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0)">2</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0)">3</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="javascript:void(0)">
                                    <i class="fa-solid fa-angles-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <!-- Shop Section End -->
    <!-- Tap to top button start -->
    <div class="theme-option">
        <div class="back-to-top">
            <a id="back-to-top" href="#">
                <i class="fas fa-chevron-up"></i>
            </a>
        </div>
    </div>
    <!-- Tap to top button end -->
    <!-- Bg overlay Start -->
    <div class="bg-overlay"></div>
    <!-- Bg overlay End -->
    <!-- latest jquery-->
    <script src="~/js/jquery-3.6.0.min.js"></script>

    <!-- jquery ui-->
    <script src="~/js/jquery-ui.min.js"></script>

    <!-- Bootstrap js-->
    <script src="~/js/bootstrap/bootstrap.bundle.min.js"></script>
    <script src="~/js/bootstrap/bootstrap-notify.min.js"></script>
    <script src="~/js/bootstrap/popper.min.js"></script>

    <!-- feather icon js-->
    <script src="~/js/feather/feather.min.js"></script>
    <script src="~/js/feather/feather-icon.js"></script>

    <!-- Lazyload Js -->
    <script src="~/js/lazysizes.min.js"></script>

    <!-- Slick js-->
    <script src="~/js/slick/slick.js"></script>
    <script src="~/js/slick/slick-animation.min.js"></script>
    <script src="~/js/slick/custom_slick.js"></script>

    <!-- Price Range Js -->
    <script src="~/js/ion.rangeSlider.min.js"></script>

    <!-- Quantity js -->
    <script src="~/js/quantity-2.js"></script>

    <!-- sidebar open js -->
    <script src="~/js/filter-sidebar.js"></script>

    <!-- WOW js -->
    <script src="~/js/wow.min.js"></script>
    <script src="~/js/custom-wow.js"></script>

    <!-- script js -->
    <script src="~/js/script.js"></script>

    <!-- theme setting js -->
    <script src="~/js/theme-setting.js"></script>

    <script>
        $(document).ready(function () {
            // 1. Lấy giá trị search từ query string trên URL
            const urlParams = new URLSearchParams(window.location.search);
            const searchParam = urlParams.get("search") || "";

            // 2. Set giá trị này vào ô tìm kiếm trong filter
            $("#searchBox").val(searchParam);

            // 3. Khởi tạo thanh price range slider
            let from = parseInt('@Context.Request.Query["minPrice"]' || "0");
            let to = parseInt('@Context.Request.Query["maxPrice"]' || "1000000");

            if (to - from <= 0) {
                to = from + 1;
                if (to > 1000000) {
                    to = 1000000;
                    from = to - 1;
                }
            }

            $("#price-range").ionRangeSlider({
                type: "double",
                min: 0,
                max: 1000000,
                from: from,
                to: to,
                prefix: "₫ ",
                prettify_separator: ".",
                decorate_both: true,
                values_separator: " - ",
                drag_interval: true,
                min_interval: 1,

                onStart: function () {
                    setTimeout(adjustSliderPosition, 100);
                },

                onChange: function (data) {
                    adjustSliderPosition();
                },

                onFinish: function (data) {
                    let minPrice = Math.min(data.from, 999999);
                    let maxPrice = Math.max(data.to, minPrice + 1);

                    $("#minPrice").val(minPrice);
                    $("#maxPrice").val(maxPrice);

                    $("#manualMin").val(formatNumber(minPrice));
                    $("#manualMax").val(formatNumber(maxPrice));

                    if (data.from !== minPrice || data.to !== maxPrice) {
                        priceSlider.update({
                            from: minPrice,
                            to: maxPrice
                        });
                    }

                    adjustSliderPosition();
                }
            });

            const priceSlider = $("#price-range").data("ionRangeSlider");

            function formatNumber(num) {
                return Number(num).toLocaleString("vi-VN");
            }

            function parseFormatted(val) {
                return parseInt((val || "").toString().replaceAll(".", "")) || 0;
            }

            $("#manualMin, #manualMax").on("input", function () {
                let minVal = parseFormatted($("#manualMin").val());
                let maxVal = parseFormatted($("#manualMax").val());

                const maxLimit = 1000000;

                minVal = Math.min(minVal, maxLimit - 1);
                maxVal = Math.min(maxVal, maxLimit);

                if (minVal >= maxVal) {
                    if ($(this).attr("id") === "manualMin") {
                        minVal = Math.max(0, maxVal - 1);
                    } else {
                        maxVal = minVal + 1;
                    }
                }

                priceSlider.update({
                    from: minVal,
                    to: maxVal
                });

                $("#minPrice").val(minVal);
                $("#maxPrice").val(maxVal);
            });

            $("#manualMin, #manualMax").on("blur", function () {
                let minVal = parseFormatted($("#manualMin").val());
                let maxVal = parseFormatted($("#manualMax").val());

                const maxLimit = 1000000;

                minVal = Math.max(0, Math.min(minVal, maxLimit - 1));
                maxVal = Math.max(0, Math.min(maxVal, maxLimit));

                if (minVal >= maxVal) {
                    if ($(this).attr("id") === "manualMin") {
                        minVal = Math.max(0, maxVal - 1);
                    } else {
                        maxVal = minVal + 1;
                    }
                }

                $("#manualMin").val(formatNumber(minVal));
                $("#manualMax").val(formatNumber(maxVal));

                priceSlider.update({
                    from: minVal,
                    to: maxVal
                });

                $("#minPrice").val(minVal);
                $("#maxPrice").val(maxVal);
            });

            function adjustSliderPosition() {
                const sliderWidth = $(".irs").width();
                const maxPosition = $(".irs-to").position().left + $(".irs-to").outerWidth();
                const minPosition = $(".irs-from").position().left;
                const irsSingle = document.querySelector(".irs-single");

                if (maxPosition > sliderWidth) {
                    const maxLeft = sliderWidth - $(".irs-to").outerWidth();
                    $(".irs-to").css("left", maxLeft);
                }

                if (minPosition < 0) {
                    $(".irs-from").css("left", 0);
                }

                const container = document.querySelector(".irs");

                if (!irsSingle || !container) return;

                const singleRect = irsSingle.getBoundingClientRect();
                const containerRect = container.getBoundingClientRect();

                if (singleRect.left < containerRect.left) {
                    irsSingle.style.left = "0px";
                }

                const overflowRight = singleRect.right - containerRect.right;
                if (overflowRight > 0) {
                    const currentLeft = parseFloat(getComputedStyle(irsSingle).left) || 0;
                    irsSingle.style.left = (currentLeft - overflowRight) + "px";
                }
            }

            $(window).resize(function () {
                setTimeout(adjustSliderPosition, 100);
            });

            // 4. Hàm gọi API lấy sản phẩm theo filter/search/sort
            window.fetchProducts = function () {
                const search = $("#searchBox").val()?.trim();
                const sort = $("#sortDropdownButton").data("sort") || "";
                const minPrice = $("#minPrice").val();
                const maxPrice = $("#maxPrice").val();
                const categoryIds = $("input[name='categoryIds']:checked").map(function () {
                    return $(this).val();
                }).get();

                $.ajax({
                    url: "/api/shopapi/products",
                    data: {
                        search: search,
                        categoryIds: categoryIds,
                        minPrice: minPrice,
                        maxPrice: maxPrice,
                        sort: sort
                    },
                    traditional: true,
                    success: function (data) {
                        window.renderProducts(data);
                    },
                    error: function (xhr) {
                        console.error("API lỗi:", xhr.responseText);
                    }
                });
            };

            // 5. Hiển thị danh sách sản phẩm lên trang
            window.renderProducts = function (products) {
                const container = $("#product-list");
                container.empty();

                if (products.length === 0) {
                    container.append("<p>Không tìm thấy sản phẩm.</p>");
                    return;
                }

                products.forEach(p => {
                    const imageUrl = p.image || "/images/product/default-product.png";
                    const price = Number(p.price).toLocaleString();
                    const category = p.categoryName || "";

                    const html = `
                        <div class="col">
                            <div class="product-box-3 h-100 wow fadeInUp">
                                <div class="product-header">
                                    <div class="product-image">
                                        <a href="/shop/detail/${p.id}">
                                            <img src="${imageUrl}"
                                                 onerror="this.onerror=null;this.src='/images/product/default-product.png';"
                                                 class="img-fluid blur-up lazyload" alt="${p.name}" />
                                        </a>
                                    </div>
                                </div>
                                <div class="product-footer">
                                    <div class="product-detail">
                                        <span class="span-name">${category}</span>
                                        <a href="/shop/detail/${p.id}" class="name theme-color">${p.name}</a>
                                        <p class="text-content mt-1 mb-2 product-content">Tình trạng: ${p.productType}</p>
                                        <h5 class="price text-dark">₫${price}</h5>
                                        <div class="cart_qty qty-box open mt-2">
                                            <div class="d-flex align-items-center">
                                                <input type="hidden" class="product-id" value="${p.id}" />
                                                <div class="input-group bg-white w-auto">
                                                    <button type="button" onclick="adjustQty(this, -1)">
                                                        <i class="fa fa-minus"></i>
                                                    </button>
                                                    <input type="number" class="form-control input-number qty-input text-center" value="1" min="1" />
                                                    <button type="button" onclick="adjustQty(this, 1)">
                                                        <i class="fa fa-plus"></i>
                                                    </button>
                                                </div>
                                                <button type="button" class="btn btn-sm ms-2 text-white" style="background-color: #4caf50;" onclick="handleAddToCart(this)">
                                                    <i class="fa fa-shopping-cart"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                    container.append(html);
                });
            };

            // 6. Lưu lịch sử từ khóa tìm kiếm
            window.saveSearchHistory = function (keyword) {
                let history = JSON.parse(sessionStorage.getItem("SearchHistory") || "[]");
                if (!history.includes(keyword)) {
                    history.push(keyword);
                    sessionStorage.setItem("SearchHistory", JSON.stringify(history));
                }
                window.renderSearchHistory();
            };

            // 7. Hiển thị lịch sử tìm kiếm
            window.renderSearchHistory = function () {
                const container = $("#searchHistoryList");
                container.empty();
                const history = JSON.parse(sessionStorage.getItem("SearchHistory") || "[]");

                if (history.length === 0) {
                    container.addClass("d-none");
                    return;
                }

                container.removeClass("d-none");
                history.forEach(keyword => {
                    const li = `
                        <li style="position: relative; padding-right: 30px;">
                            <span class="keyword-item fw-semibold" data-key="${keyword}" style="cursor:pointer;">
                                ${keyword}
                            </span>
                            <button class="btn-remove-keyword border-0 bg-transparent text-muted fw-bold"
                                    data-key="${keyword}"
                                    style="position:absolute;right:0;top:50%;transform:translateY(-50%);cursor:pointer;width:24px;height:24px;display:flex;align-items:center;justify-content:center">
                            </button>
                        </li>`;
                    container.append(li);
                });
            };

            // 8. Sự kiện submit form tìm kiếm trong filter
            $("#searchForm").submit(function (e) {
                e.preventDefault();
                const keyword = $("#searchBox").val()?.trim();
                if (keyword) {
                    window.saveSearchHistory(keyword);
                    $("#searchBox").val(keyword);
                }
                window.fetchProducts();
            });

            // 9. Click vào từ khóa trong lịch sử tìm kiếm
            $(document).on("click", ".keyword-item", function () {
                const keyword = $(this).data("key");
                $("#searchBox").val(keyword);
                window.fetchProducts();
            });

            // 10. Xóa một từ khóa trong lịch sử
            $(document).on("click", ".btn-remove-keyword", function () {
                const key = $(this).data("key");
                let history = JSON.parse(sessionStorage.getItem("SearchHistory") || "[]");
                history = history.filter(k => k !== key);
                sessionStorage.setItem("SearchHistory", JSON.stringify(history));
                window.renderSearchHistory();
            });

            // 11. Xóa tất cả lịch sử tìm kiếm
            $("#clearAllBtn").click(function () {
                sessionStorage.removeItem("SearchHistory");
                window.renderSearchHistory();
            });

            // 12. Thay đổi kiểu sắp xếp
            $(".dropdown-menu .dropdown-item").click(function () {
                const label = $(this).text();
                const sort = $(this).data("sort");
                $("#currentSortLabel").text(label);
                $("#sortDropdownButton").data("sort", sort);
                window.fetchProducts();
            });

            // 13. Áp dụng filter (checkbox category, price range)
            $("#applyFilterBtn").click(function () {
                window.fetchProducts();
            });

            // 14. Khởi chạy khi trang load
            window.renderSearchHistory();
            window.fetchProducts();
        });
    </script>

    <script>
        window.handleAddToCart = function(btn) {
            // Lấy id sản phẩm và số lượng
            const productId = $(btn).closest('.cart_qty').find('.product-id').val();
            const quantity = $(btn).closest('.cart_qty').find('.qty-input').val() || 1;

            $.ajax({
                url: '/Shop/AddToCart',
                type: 'POST',
                data: {
                    productId: productId,
                    quantity: quantity
                },
                success: function(res) {
                    // Reload lại trang hoặc fetch lại sản phẩm
                    location.reload();
                },
                error: function(xhr) {
                    alert('Add to cart failed!');
                }
            });
        };
    </script>
</body>
</html>