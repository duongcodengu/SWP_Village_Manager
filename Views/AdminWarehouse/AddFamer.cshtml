@{
    ViewData["Title"] = "Thêm nông dân";
    Layout = "~/Views/Shared/_AdminWarehouse.cshtml";
}
@model List<Village_Manager.Models.FarmerRegistrationRequest>

<!DOCTYPE html>
<html lang="vi" dir="ltr">

<head>
    <!-- meta data -->
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description"
          content="FamViệt admin is super flexible, powerful, clean &amp; modern responsive bootstrap 5 admin template with unlimited possibilities.">
    <meta name="keywords"
          content="admin template, FamViệt admin template, dashboard template, flat admin template, responsive admin template, web app">
    <meta name="author" content="FamViệt">
    <link rel="icon" href="~/back-end/images/favicon.png" type="image/x-icon">
    <link rel="shortcut icon" href="~/back-end/images/favicon.png" type="image/x-icon">
    <title>FamViệt - Thêm nông dân</title>

    <!-- Google font -->
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
          rel="stylesheet">

    <!-- Linear Icon css -->
    <link rel="stylesheet" href="~/back-end/css/linearicon.css">

    <!-- Fontawesome css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/font-awesome.css">

    <!-- Themify icon css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/themify.css">

    <!--Dropzon css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/dropzone.css">

    <!-- Feather icon css-->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/feather-icon.css">

    <!-- remixicon css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/remixicon.css">

    <!-- Select2 css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/select2.min.css">

    <!-- Plugins css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/scrollbar.css">
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/animate.css">
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/chartist.css">
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/date-picker.css">

    <!-- Bootstrap css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/bootstrap.css">

    <!-- Bootstrap-tag input css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/vendors/bootstrap-tagsinput.css">

    <!-- App css -->
    <link rel="stylesheet" type="text/css" href="~/back-end/css/style.css">
    <style>
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

            .pagination .page-item {
                margin: 0 3px;
            }

            .pagination .page-link {
                border-radius: 6px;
                color: #007bff;
                border: 1px solid #dee2e6;
                padding: 6px 12px;
                transition: 0.3s;
            }

                .pagination .page-link:hover {
                    background-color: #007bff;
                    color: white;
                    text-decoration: none;
                }

            .pagination .active .page-link {
                background-color: #007bff;
                color: white;
                border-color: #007bff;
            }
    </style>
</head>

<body>
    <!-- page-wrapper start -->
    <div class="page-wrapper compact-wrapper" id="pageWrapper">
        <!-- Page Body start -->
        <div class="page-body-wrapper">
            <div class="page-body">

                <!-- New Famer Add Start -->
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">
                            <div class="row">
                                <div class="col-xxl-10 col-lg-12 m-auto">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="card-header-2 mb-3">
                                                <h5>Yêu cầu đăng ký làm Famer</h5>
                                            </div>

                                            @if (Model == null || !Model.Any())
                                            {
                                                <div>Không có yêu cầu nào đang chờ xét duyệt.</div>
                                            }
                                            else
                                            {
                                                <div class="table-responsive">
                                                    <table id="myTable" class="table table-bordered table-striped">
                                                        <thead class="table-light">
                                                            <tr>
                                                                <th>#</th>
                                                                <th>Họ tên</th>
                                                                <th>SĐT</th>
                                                                <th>Địa chỉ</th>
                                                                <th>Thời gian gửi</th>
                                                                <th>Hành động</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @for (int i = 0; i < Model.Count; i++)
                                                            {
                                                                var item = Model[i];
                                                                <tr>
                                                                    <td>@(i + 1)</td>
                                                                    <td>@item.FullName</td>
                                                                    <td>@item.Phone</td>
                                                                    <td>@item.Address</td>
                                                                    <td>@item.RequestedAt.Value.ToString("dd/MM/yyyy HH:mm")</td>
                                                                    <td>
                                                                        <form method="post" asp-action="Approve" asp-controller="AdminWarehouse" class="d-inline">
                                                                            <input type="hidden" name="id" value="@item.Id" />
                                                                            <button class="btn btn-success btn-sm" type="submit">Chấp nhận</button>
                                                                        </form>
                                                                        <form method="post" asp-action="Reject" asp-controller="AdminWarehouse" class="d-inline ms-2">
                                                                            <input type="hidden" name="id" value="@item.Id" />
                                                                            <button class="btn btn-danger btn-sm" type="submit">Từ chối</button>
                                                                        </form>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                    <nav aria-label="Page navigation">
                                                        <div id="pagination"></div>
                                                    </nav>
                                                    @* phân trang *@
                                                    <script>
                                                                                                                const rowsPerPage = 5;
                                                        const table = document.getElementById("myTable");  // Đảm bảo ID này khớp với table
                                                        const tbody = table.querySelector("tbody");
                                                        const rows = Array.from(tbody.querySelectorAll("tr"));
                                                        const pagination = document.getElementById("pagination");

                                                        function showPage(page) {
                                                            const start = (page - 1) * rowsPerPage;
                                                            const end = start + rowsPerPage;

                                                            rows.forEach((row, index) => {
                                                                row.style.display = index >= start && index < end ? "" : "none";
                                                            });

                                                            highlightActivePage(page);
                                                        }

                                                        function highlightActivePage(currentPage) {
                                                            const items = pagination.querySelectorAll("li");
                                                            items.forEach(li => li.classList.remove("active"));

                                                            if (currentPage >= 1 && currentPage <= items.length - 2) {
                                                                items[currentPage].classList.add("active");
                                                            }
                                                        }

                                                        function setupPagination() {
                                                            const totalPages = Math.max(1, Math.ceil(rows.length / rowsPerPage)); // 👈 đảm bảo luôn có ít nhất 1 trang
                                                            pagination.innerHTML = "";

                                                            const ul = document.createElement("ul");
                                                            ul.classList.add("pagination", "justify-content-center");

                                                            // Previous
                                                            const prev = document.createElement("li");
                                                            prev.classList.add("page-item");
                                                            prev.innerHTML = `<a class="page-link" href="#">&lt;</a>`;
                                                            prev.addEventListener("click", (e) => {
                                                                e.preventDefault();
                                                                const current = ul.querySelector("li.active");
                                                                const index = [...ul.children].indexOf(current);
                                                                if (index > 1) showPage(index - 1);
                                                            });
                                                            ul.appendChild(prev);

                                                            // Pages
                                                            for (let i = 1; i <= totalPages; i++) { // 👈 chỉ cần duyệt đến totalPages
                                                                const li = document.createElement("li");
                                                                li.classList.add("page-item");
                                                                const a = document.createElement("a");
                                                                a.classList.add("page-link");
                                                                a.href = "#";
                                                                a.innerText = i;
                                                                a.addEventListener("click", (e) => {
                                                                    e.preventDefault();
                                                                    showPage(i);
                                                                });
                                                                li.appendChild(a);
                                                                ul.appendChild(li);
                                                            }

                                                            // Next
                                                            const next = document.createElement("li");
                                                            next.classList.add("page-item");
                                                            next.innerHTML = `<a class="page-link" href="#">&gt;</a>`;
                                                            next.addEventListener("click", (e) => {
                                                                e.preventDefault();
                                                                const current = ul.querySelector("li.active");
                                                                const index = [...ul.children].indexOf(current);
                                                                const total = ul.children.length - 2;
                                                                if (index < total) showPage(index + 1);
                                                            });
                                                            ul.appendChild(next);

                                                            pagination.appendChild(ul);
                                                        }

                                                        document.addEventListener("DOMContentLoaded", () => {
                                                            setupPagination();
                                                            showPage(1);
                                                        });

                                                    </script>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- New Famer Add End -->
            </div>
            <!-- Container-fluid End -->
        </div>
        <!-- Page Body End -->
    </div>
    <!-- page-wrapper End -->

</body>

</html>
